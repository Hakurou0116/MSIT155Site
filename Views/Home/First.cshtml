
@{
    ViewData["Title"] = "First";
}

<h1>First Ajax Demo</h1>

<input type="button" class="btn btn-primary mb-3" value="Ajax 開始" id="buttonStart" />
<input type="button" class="btn btn-primary mb-3" value="Ajax 結束" id="buttonStop" />
<img src="~/images/loadingicon.png" id="img1" style="display:none" />
<div class="alert alert-info" id="divInfo"></div>


@section Scripts{
    <script>
        const btnStart = document.querySelector('#buttonStart');
        const btnStop = document.querySelector('#buttonStop');
        const divInfo = document.querySelector('#divInfo');
        const imgLoader = document.querySelector('#img1');
        let abortController;
        //停止Ajax程式的執行
        btnStop.addEventListener('click', () => {
            if (abortController) {
                abortController.abort();
            }
        })


        btnStart.addEventListener('click', async () => {

            try{
                //顯示執行中的圖
                imgLoader.style.display = "inline";
                //disable button
                btnStart.setAttribute('disabled', 'disabled');
                btnStart.value = "執行中...";

                //取消非同步程式執行的設定
                abortController = new AbortController();
                const signal = abortController.signal;

                //5秒鐘沒有回傳結果就停止程式的執行
                setTimeout(() => {
                    abortController.abort();
                }, 5000)

                const response = await fetch('@Url.Content("/api/Index")')
                if(!response.ok) {
                    throw new Error(`有錯誤,狀態碼:${response.status}`)
                }
                const data = await response.text();
                divInfo.innerHTML = `<h3>${data}</h3>`
            }
            catch(error) {
                let message = error.message;
                if (error.name === "AbortError"){
                    message="系統忙碌中，請稍後再試"
                }
                divInfo.innerHTML = `<h3>${message}</h3>`
            }
            finally{
                console.log('finally');
                //隱藏執行中圖示
                imgLoader.style.display = "none";
                btnStart.removeAttribute('disabled');
                btnStart.value = "Ajax 開始";
            
            }
                // .then(response => {




                //     if (!response.ok) {
                //         throw new Error(`有錯誤,狀態碼:${response.status}`)

                //     }
                //     return response.text();

                //     console.log(response);
                //     //console.log(response.text());
                //     response.headers.forEach((value, name) => {
                //         console.log(`${name}:${value}`);
                //     });
                //     console.log(response.headers.get(`Content-Length:${Content-Length}`));
                //     console.log(response.headers.get(`Date:${Date}`));

                //     return response.text(); //從body接出文字資料
                // })
                // //由下一個.then接出上面return的promise物件
                // .then(data => { 
                //     console.log(data);
                //     divInfo.innerHTML=`<h3>${data}</h3>`;
                // })
        })

        

    </script>
}